Response
简述: 响应结果对象
1. 响应报文
   简述: 服务端返回客户端传输数据的格式

2. 响应报文结构
    响应行: 协议/版本,响应状态代码
    响应头: 一些返回数据的编码格式等等
    响应体: 返回的具体响应结果

3. 状态码
    200:  正常情况返回
    302: 重定向
    304: 从缓存中读取数据的时候,返回结果状态为304(比如: 浏览器第一次从服务端获取数据,第二次则从浏览器的缓存中获取树)
    404: 请求的路径不对或者请求路径不存在
    500: 服务器异常

4. 响应报文
    <1> 响应行
    1) setStatus(): 设置响应状态码

    <2> 响应头
    1) 刷新页面
     resp.setHeader("refresh","6;http://www.baidu.com");
     参数1: 等待几秒刷新   参数2: 要刷新页面的路径

    2) 设置返回数据的格式及编码格式
        设置编码格式方式一
        resp.setHeader("content-type","text/html;charset=utf-8");
        设置编码格式方式二
        resp.setContentType("text/html;charset=utf-8");

    3) 重定向的时候使用,设置跳转的请求路径
       resp.setHeader("location","/myServlet");

    4) 以附件形式解析正文
       resp.setHeader("content-disposition","attachment;filename="+文件名.格式);
       各种文件格式转换:
       .jpg:  image/jpeg
       .txt:

5. 响应体
    响应数据分为两种方式：
    <1> 输出的是字符数据，可以是任意数据类型
    方法: getWriter();
    注； 根据输出的格式看是html，那么println换行是无效的，想要换行就用html中<br>标签来实现

    <2> 输出的是字节数据，主要是文件下载的时候使用
    方法: getOutputStream();

6. 重定向
    第一步: 客户端发起请求,Aservlet接受请求参数
    第二步: 在Aservlet响应头中设置状态码为302,同时在location中设置跳转的路径(Bservlet)
    第三步: 在Bservlet中接受Aservlet的请求参数,处理参数并响应结果

    特点： 1. 发起两次请求  2. 重定向的目的就是完成逻辑跳转

   练习： 登录成功跳转登录成功的页面，登录失败跳转到登录失败的页面
   方式一: 返回状态码+location  完成重定向
   方式二: 通过调用senRedirect  完成重定向

7. 文件下载
   <1> 浏览器可以解析.jpg,.txt格式的文件,解析完之后将文件或图片直接展示在页面上,其他格式的文件
       不能解析,则只能下载,若.jpg,.txt格式的文件想要下载,那么就要在响应头中设置它的文件格式

   <2> 下载步骤
    第一步: 设置响应头(1.文件格式 2.告诉浏览器文件打开的方式)
    第二步: 获取文件名,获取存放文件的上级目录
    第四步: 创建文件(文件路径; 文件上级目录+获取到的文件名)
    第五步: FileInputSteam读取文件
    第五步: 根据响应对象获取outputStream流
    第六步: 将流中文件写入到输出流中
    第七步: 关闭读取流



