1. 正则表达式
定义: 用来效验字符串是否满足该功能
比如: 该字符串必须是qq.com格式等等
2. 反射
作用: 用于读取.class文件中的成员变量,成员方法,构造方法的

2.1 java程序是如何运行的
    第一步: 我们编写的代码是.java文件
    第二步: jvm通过编译将.java文件编译成.calss文件,存放在方法区硬盘中
    第三步:  jvm通过类加载器classLoader加载到内存中,这时jvm就会执行内存中的代码来访问成员变量和方法

2.2 反射是如何获取成员变量和方法的
反射其实就是从Class类(字节码文件)中获取成员变量和成员方法,构造方法

2.3 字节码文件是什么,里面有什么
字节码文件就是.class文件,它里面存放的就是编译后的成员变量和构造方法及构造函数

2.5 获取Class对象的三种方式
    第一种方式:  类名.class
    第二种方式:  对象.getClass
    带三种方式:  Class.forname(类全名)

2.6 Class类中的方法
    getName: 获取类全名
    getSimpleName: 获取类名

2.6 什么是预定义对象
简述: 我们java中基本数据类和void也都是class的对象,我们把它叫做预定义对象,预定义对象它不属于任何包下面的

2.7 通过反射获取有参或者无参对象
     class.getDeclaredConstructor():获取构造参数对象
     参数: 参数类型.calss(如果是无参构造则不用填写,如果是有参构造则需要填写)
     根据构造对象创建真实对象: 构造对象.newInstance()
     参数: 构造参数中具体赋的值

2.8 获取/设置成员变量
    class.getDeclaredField(): 获取成员变量对象
    参数: 方法名
    object.get(): 获取值
    参数: 具体的对象
    object.set(): 设置值
    参数1: 具体的对象   参数2: 要赋的值

2.9 获取成员方法
    class.getDeclaredMethod(): 获取成员方法对象
    参数1: 方法名  参数2: 方法中的参数类型.class
    invork(): 执行方法
    参数1: 具体的对象  参数2: 方法中要赋的值
    注意: 这个方法是有返回结果的,如果获取的方法中没有返回值,那么invork方法返回值就是null

    补充:
    <1> 获取静态成员方法
        同获取成员方法,唯一不同的地方是在调用invork方法的时候第一个参数不是真实对象,而是null
    <2> getConstructor(),getField(),getMethod()
        这几个方法和我们以上使用的方法都一样,获取构造参数,成员变量,成员方法,唯一不同的是,这些方法
        只能获取public修饰的,也就是公共的,私有和默认修饰的则只能通过上述de开头的方法才能访问


