1. final
描述：被修饰的地方不可再次修改
作用于：类，方法，变量
     修饰类: 被修饰的类不能被继承(被final修饰的类是不能被继承的演示,否则报编译错误,提示该类不能被继承)
     修饰方法: 被修饰的方法不能被重写(在复写的时候是看不到的该方法的,如果硬写则会报编译错误)
     修饰变量: 被修饰的变量不能重新赋值(硬要赋值则报编译错误)

1.2 修饰变量
1.2.1 修饰基本数据类型：被修饰的基本数据类型只能赋值一次
1.2.2 修饰引用数据类型： 被修饰的引用数据类型，只能指向一个对象，地址不能再次改变

2. 成员变量
成员变量初始的两种方式：
方式一： 在类中通过final对变量进行赋值，被final修饰的成员变量则没有set方法，不能再次赋值
方式二： 构造参数初始化

3. 内部类
A类中包含一个B类,此时A类就是外部类,B类就是内部类
4. 成员内部类
C类中有一个成员方法外的内部D类,这个D类就叫成员内部类
5. 访问特点
1. 内部类访问外部类
成员内部类访问局部变量,直接是变量名
成员内部类访问成员变量,this.变量名
成员内部类访问外部类成员变量,外部类名.this.变量名
2. 外部类访问内部类
必须先创建外部类,才能访问内部类
首先创建外部类,再创建内部类(外部类对象.new 内部类对象();),然后通过内部类对象调用内部类成员方法
6. 局部内部类
在外部类的成员方法中创建内部类
7. 匿名内部类
当一个接口或/父类只有一个实现类/子类的时候,我们可以采用匿名内部类的方式书写,
不用再创建一个子类或者实现类来继承或实现父类/接口,来编写细节方法
