动态代理
1. 类加载器
    简述: 将磁盘中的.clas文件加载到内存中
   idea中的java程序是如何运行的呢?
   1) 我们编写的.java文件由jvm编译为.class文件存放在磁盘中
   2) jvm通过ClassLoader类加载器将.class文件加载到内存中
   3) 而被加载到内存中的.class文件就会变成一个Class对象,然后通过Class对象去访问构造方法,成员方法,成员变量

2. 常见的类加载器有三种
    1) BootStrap 根类加载器(最底层的加载器)
    2) ExtClassLoader 扩展类加载器(JKD所需要的东西)
    3) AppClassLoader 系统/应用类加载器(我们自己写的代码)

代理模式
  说明:
  <1> 代理对象主要作用就是拦截被代理对象的访问
  <2> 代理对象必须持有被代理对象
  <3> 代理对象和被代理对象必须具有相同的方法
  <4> 代理对象可以直接拦截被代理对象的访问,也可以修改访问的参数,返回值

动态代理
   简述: 动态生成一个代理对象,然后去访问被代理对象,从而对被代理对象进行拦截,修改参数等操作
   详细操作查看代码
   动态代理分为两种: JDK动态代理  cglib动态代理
   目前使用的是: JKD动态代理
