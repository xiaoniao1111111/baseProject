git
1.  简述
    开源的分布式版本控制系统

2.  git与svn优缺点
    svn:
        <1> 服务器单点故障: (只有一台服务进行版本控制)
        <2> 容错性差: 旦出现问题就不能推送和拉取,无法工作
        <3> 由中央服务器生成全局版本号

3.  git和gitHub
    git: 版本控制工具,是安装在计算机中的一款软件
    gitHub: 一个网站,分布式版本控制系统,提供给用户空间创建git存储,用来保存数据和代码的,同时可以对外共享和交流
    gitee: gitHub是国外的一个版本控制系统,gitee是阿里巴巴提供的一款国内的分布式版本控制系统

4.  git安装
    傻瓜式一键安装

5.  git的基本使用
    <1> 创建版本库
        git: 查看git相关命令,比如git版本号命令
        mkdir 文件夹名: 创建文件夹
        cd 文件夹名: 进入当前文件夹
        git init: 将当前文件夹变成git可以管理的仓库(在当前文件夹输入)
        注: 这里可以生成一个隐藏的.git文件,表示已经是git仓库了

    <2> 添加文件
        手动添加

    <3> 添加到暂存区中
        1)  添加单个文件: git add 文件名.格式
        2)  添加多个文件: git add 文件列表(多个以空格隔开,例: a,txt b.txt c.txt)

    <4> 添加到本地仓库中
        git commit

    <5> 工作区,暂存区,版本库(分为:暂存区和本地仓库)
        工作区:    我们刚开始创建的文件或者写的代码都存放在工作区
        暂存区:    将工作区的文件或代码通过git add添加到暂存区中
        本地仓库:   将暂存区的文件或代码通过git commit添加到本地仓库中

    <6> git添加用户名和邮箱
        设置用户名:	git config --global user.name "用户名"
        设置邮箱:   git config --global user.email 503899856@qq.com(邮箱,这里没有双引号,注意!!)
        查看用户名:  git config user.name
        查看邮箱:   git config user.email
        查看更多设置:  git config --list

    <7> 修改文件
        1)  差异比较
            版本仓库与我们工作区内容进行比较,红色表示本地仓库的,绿色表示工作区最新内容
            命令: git diff  HEAD -- 文件.格式

        2)  查看工作区状态,修改后的文件添加,提交
            查看工作区中的文件是否有被修改
            命令: git status
            注: 如果该文件红色,表示已经修改过,没有修改则空
            git add ,git commit进行添加和提交

        3)  版本回退
            git clear:  清除当前窗口信息
            在版本回退之前我们要看历史的信息
            3.1  git log: 查看日志,查看历史版本信息
                 git log --pretty=oneline: 将日志信息简化
            3.2  git reset --hard HEAD^: 回退到上一个版本
                 git reset --hard HEAD^^: 回退到上上个版本
                 git reset --hard HEAD~n: 回退到往上n个版本处,
                 例: 比如回退到往上100个版本,git reset --hard HEAD~100

        4)  撤销版本回退
            描述:版本回退之后,又想要回到回退前的版本)
            4.1  git reflog: 查看历史执行的所有命令动作
                 (用于找到想要恢复的版本号,根据版本号回退到想要回退的版本处)
            4.2  git reset --hard 版本号: 回退到指定版本号的位置
                 例: git reset --hard 2b2dd99

    <8> 撤销修改
        1)  撤销工作区修改
            描述:  撤销工作区未提交的数据
            1.1  git status: 查看当前文件状态(是否有未提交的数据,红色表示有未提交的数据)
            1.2  git checkout 文件名.格式
            1.3  git status: 再次查看文件状态

        2)  撤销暂存区修改
            描述: 撤销暂存区未提交的数据
            git rset HEAD 文件.格式: 回退到工作区(将文件回退到当前最新已提交的版本位置)
            git checkout 文件.格式: 将工作区未提交的数据进行回退

        3) 文件删除
            一:  git rm 文件名.格式: 删除文件
            二:  git commit -m "": 删除操作提交

        4)  误删文件恢复
            一: git reflog: 查看版本号
            二: git reset --hard 版本号: 回退到当前版本
