JDK8 Date使用
与以前date比较:
<1> 非线程安全的,所有日期类可变
<2> 设计很差,java.util.Date的类名与java.sql.Date类名一样
<3> 日期类不提供国际化,不支持时区,需要引入calendar和TimeZone类
名词解释：
    Local（本地）：简化了日期时间的处理，没有时区的问题
    Zoned(时区)：通过指定的时区处理日期日期时间

1.  Instant
简述: 时间戳

1.1 获取当前时间戳

   关键语句: Instant.now()

1.2 将日期转换成时间戳

    关键词:  toInstant()

1.3 将时间戳转换成日期

    关键语句:   Date.from()

2.  LocalDate
简述: 本地日期,不包含时分秒

2.1 获取当前时间

    关键语句:   LocalDate.now()

2.2 获取当前时间的年月日

    关键词:   getYear()  getMonthValue()  getDayOfMonth()

2.3 获取自定义日期

    关键词:    LocalDate.of()

2.4 判断两个日期是否相等

    备注: 通过equls去比较两个LocalDate类型日期是否相等

2.5 检查重复事件(比如节日,生日)

    关键词: MonthDay.of()
    备注: 1.  自定义一个localDate日期只有月日
         2.   通过MonthDay.fo()把当前日期组装
         3.   通过equls方法比较是否相等

2.8 判断某个日期在另一个日期之前还是之后

    关键词:    isBefore (之前)   isAfter(之后)
    注意: 第一个参数为当前日期,第二个参数为比较日期

2.9 两个日期相差多少天多少月

    关键词:    betwwen   getMonths()  getDays()
    注意: getDays()是获取当天的"号数"进行比较

2.10 字符串日期转为LocalDate

    LocalDate localDate = LocalDate.parse(strDate);

2.11 LocalDate 转为 Date

    简述：将该日期的时分秒设定为最小时间00：00:00
    Date date = Date.from(localDate.atStartOfDay(ZoneId.systemDefault()).toInstant());

2.12  LocalDate.ofYearDay

    简述:  用于获取以某年份为准,第N天后的日期

2.12  plus

    简述: 以当前时间为准,获取往后的日期

2.13  minus

    简述: 以当前时间为准,获取以前的日期

    方法参数:

    <1>  ChronoUnit.WEEKS :  以星期为单位
    <2>  ChronoUnit.DAYS : 以天为单位
    <3>  ChronoUnit.DECADES : 以10年为单位
    <4>  ChronoUnit.CENTURIES : 以世纪为单位(1世纪=100年)
    <5>

2.14 getDayOfYear

    简述: 用于获取某天是本年中的第几天

2.15 getDayOfMonth

    简述; 用于获取某天是这个月中的第几天

2.16 getDayOfWeek

    简述: 用于获取某天是这周中的第几天

总结:
    1. 字符串日期可以转为LocalDate
    2. LocalDate可以转为Date
    3. Date格式日期不能转为LocalDate
    4. 可以自定义年，月，日组成转换为LocalDate日期
    5. 时间放法中有三大系列:  with


3.  LocalTime
简述: 获取本地时间,不包含年月日

3.1 增加时间里的小时数

    关键词:    plusHours()

3.2 获取当前时间

    关键词:    LocalTime.now()

4.  LocalDateTime
    简述: 获取本地日期时间,包含年月日时分秒

4.1 Date日期转为LocalDateTime

    LocalDateTime localDateTime = LocalDateTime.ofInstant(date.toInstant(), ZoneId.systemDefault());

4.2 LocalDateTime转为Date

    Date date1 = Date.from(localDateTime.atZone(ZoneId.systemDefault()).toInstant());

4.1 获取某月第一天

    LocalDateTime firstDay = localDateTime.with(TemporalAdjusters.firstDayOfMonth())；

4.2 获取某月最后一天

    LocalDateTime lastDayOfMonth = localDateTime.with(TemporalAdjusters.lastDayOfMonth());

4.3 获取某天最小时间

    LocalDateTime minDay = localDateTime.with(LocalTime.MIN);

4.4 获取某天最大时间

    LocalDateTime maxDay = localDateTime.with(LocalTime.MAX);

5.  ZonedDateTime
简述:

6.  clock
简述: 时钟
6.1 通过时钟获取当前时间时间戳
    关键词:    systemUTC()


