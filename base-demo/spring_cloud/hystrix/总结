Hystrix
简述: Hystrix是一个延迟和容错库,用于隔离访问远程服务,第三方库,防止出现级联失败

1. 工作机制
    熔断机制就像家里的电路熔断器,当电路发生短路会立马熔断电路,避免发生灾难,在我们系统中一旦发现某些请求
    反应过慢或者有大量请求超时的情况下,能够主动熔断,防止整个系统拖垮
    通过电路的方式,可以将后续的请求直接拒绝掉,一段时间之后允许部分的请求通过,如果调用成功则让放行之前请求,反之
    继续断开

2. 一般当服务器出现异常时,直接进行回滚或降级处理
    <1> 回滚: 当服务器出现异常,不是直接报错,而是返回一个友好的提示,虽然拒绝了用户的访问,当是有返回结果的
    <2> 降级处理: 当系统繁忙时,我们可以切断次要的业务,来保证主要业务的畅通,一切资源优先给主业务使用,待系统
       访问不再那么频繁时,将次要业务的访问放行
3. 步骤:
    客户端配置
    <1> 引入netflix-hystrix启动器
    <2> 在启动类上加上@EnableHystrix注解,表示开启熔断
    <3> 建一个类里面有两个方法
        第一个方法是正常发送请求方法,并返回结果
        第二个方法是回调方法
    <4> 在第一个方法上加上
        @HystrixCommand(fallbackMethod = "queryUserByIdFallback")
        表示如果请求超时,则熔断,调用回调方法